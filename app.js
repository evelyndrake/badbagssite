require('dotenv').config();
const express = require("express")
const path = require('path')

const app = express();

// app.use('/css', express.static(path.join(__dirname, 'node_modules/bootstrap/dist/css')))
app.use('/js', express.static(path.join(__dirname, 'node_modules/bootstrap/dist/js')));
app.use('/js', express.static(path.join(__dirname, 'node_modules/jquery/dist')));
app.use('/js', express.static(path.join(__dirname, 'js')));
app.use('/css', express.static(path.join(__dirname, 'css')));

app.get("/", (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});
app.get("/disclaimer", async(req, res) => {
    res.sendFile(path.join(__dirname, 'disclaimer.html'));
});
app.get("/labtested", async(req, res) => {
    res.sendFile(path.join(__dirname, 'labtested.html'));
});
app.get("/cards", async(req, res) => {
    const c = await cards();
    res.json(c);
});

app.listen(3000, () => {
    console.log('Listening on port ' + 3000);
});


const { GoogleSpreadsheet } = require('google-spreadsheet');

// Initialize the sheet - doc ID is the long id in the sheets URL
const doc = new GoogleSpreadsheet('1GM-xcvSiKyFr_oBy3Q9pw61HlnFRMqQSjZMeqNuAc60');

// Initialize Auth - see https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication
async function cards() {
    await doc.useServiceAccountAuth({
        // env var values are copied from service account credentials generated by google
        // see "Authentication" section in docs for more info
        client_email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
        private_key: process.env.GOOGLE_PRIVATE_KEY,
    });
    await doc.loadInfo(); // loads document properties and worksheets
    console.log(doc.title);

    const sheet = doc.sheetsByIndex[0]; // or use doc.sheetsById[id] or doc.sheetsByTitle[title]
    console.log(sheet.title);
    console.log(sheet.rowCount);
    var jsonData = "";
    const rows = await sheet.getRows();
    var dataArray = [];
    // copy row values to array
    for (let i = 0; i < rows.length; i++) {
        var rowdata = rows[i]._rawData;
        dataArray.push(rowdata);
    };
    jsonData = JSON.stringify(dataArray);

    // for (let i = 1; i < rows.length; i++) {
    //   var rowdata =
    //   jsonData += rowdata;
    //   if (i < rows.length - 1) jsonData += ",";
    // }
    return dataArray; //{jsonData};

    // adding / removing sheets
    // const newSheet = await doc.addSheet({ title: 'hot new sheet!' });
    // await newSheet.delete();
};